import bs4 as bs4
import sqlite3
import requests


class VkBot:

    def __init__(self, user_id):
        print("\n–°–æ–∑–¥–∞–Ω –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞!")
        self._USER_ID = user_id
        self._USERNAME = self._get_user_name_from_vk_id(user_id)

        self._COMMANDS = ["–ü–†–ò–í–ï–¢", "–ö–£–†–¨–ï–†", "–†–ê–ë–û–¢–û–î–ê–¢–ï–õ–¨", "–ü–û–ö–ê"]

    def _get_user_name_from_vk_id(self, user_id):
        request = requests.get("https://vk.com/id" + str(user_id))
        bs = bs4.BeautifulSoup(request.text, "html.parser")

        user_name = self._clean_all_tag_from_str(bs.findAll("title")[0])

        return user_name.split()[0]

    def new_message(self, message):
        p = 0

        if p == 1:
            if message.upper() == '–ü–û–î–¢–í–ï–†–ñ–î–ê–Æ':
                return f"–ø"
        # –ü—Ä–∏–≤–µ—Ç
        if message.upper() == self._COMMANDS[0]:
            return f"–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç, {self._USERNAME}! \n–í–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n¬´–ö—É—Ä—å–µ—Ä¬ª\n¬´–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å¬ª"

            # –†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å
        elif message.upper() == self._COMMANDS[2]:
            return f'–°—É–ø–µ—Ä, –≤—ã —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å!\n–°—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É–π—Ç–µ —Ñ–æ—Ä–º–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!\n1) –í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ—á–∫–µ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä, –≤—ã–¥–∞–Ω–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π\n2) –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å 1 —Å–æ–æ–±—â–µ–Ω–∏–µ–º\n3) –£—á–∏—Ç—ã–≤–∞—Ç—å —Å–∏–Ω–∫—Ç–∞–∫—Å–∏–∑ –∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—é\n4) –ü—Ä–∏ –æ—à–∏–±–æ—á–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–Ω–æ–≤–∞ –Ω–∞–ø–∏—à–µ—Ç–µ ¬´–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å¬ª\n5) –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –ø–æ —Å—Å—ã–ª–∫–µ https://vk.com/topic-194515327_44426909\n–í –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–∞–ø–∏—à–µ—Ç–µ ¬´–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é¬ª'
            p = 1

        # –ü–æ–∫–∞
        elif message.upper() == self._COMMANDS[3]:
            return f"–ü–æ–∫–∞-–ø–æ–∫–∞, {self._USERNAME}!"

        # –ö—É—Ä—å–µ—Ä
        elif message.upper() == self._COMMANDS[1]:
            return f"–°—É–ø–µ—Ä, –≤—ã –∫—É—Ä—å–µ—Ä! –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã, –Ω–∞–∂–º–∏—Ç–µ ¬´üëâüèª¬ª"

        elif message == 'üëâüèª':
            conn = sqlite3.connect('Goods.db')
            cursor = conn.cursor()
            cursor.execute("SELECT * FROM Goods")
            results1 = cursor.fetchall()
            results = "'".join(str(results1)[2:-2].split("'")).split(',')
            return f"!!!!!!\n–í–æ—Ç –∏ {results[6]} –∑–∞–∫–∞–∑ \n–ò–º—è –∑–∞–∫–∞–∑—á–∏–∫–∞ - {results[0][1:-1]} \n–ö—É–¥–∞ –¥–æ—Å—Ç–∞–≤–ª—è—Ç—å - {results[1][2:-1]} \n–¢–æ–≤–∞—Ä - {results[2][2:-1]} \n{results[5][:-1]} \n–ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å –Ω–∞–∂–º–∏—Ç–µ ¬´üëçüèª¬ª"
            conn.close()
        else:
            return f"–ù–µ –ø–æ–Ω–∏–º–∞—é –æ —á–µ–º –≤—ã...\n–í–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n¬´–ö—É—Ä—å–µ—Ä¬ª\n¬´–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å¬ª"

    @staticmethod
    def _clean_all_tag_from_str(string_line):
        """
        –û—á–∏—Å—Ç–∫–∞ —Å—Ç—Ä–æ–∫–∏ stringLine –æ—Ç —Ç—ç–≥–æ–≤ –∏ –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º—ã—Ö
        :param string_line: –û—á–∏—â–∞–µ–º–∞—è —Å—Ç—Ä–æ–∫–∞
        :return: –æ—á–∏—â–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        """

        result = ""
        not_skip = True
        for i in list(string_line):
            if not_skip:
                if i == "<":
                    not_skip = False
                else:
                    result += i
            else:
                if i == ">":
                    not_skip = True

        return result
